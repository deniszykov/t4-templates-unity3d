<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameDevWare.TextTransform</name>
    </assembly>
    <members>
        <member name="T:GameDevWare.TextTransform.Processor.CrossAppDomainAssemblyResolver">
            <summary>
                Provides a handler for AssemblyResolve events that looks them up in the domain that created the resolver.
            </summary>
        </member>
        <member name="P:GameDevWare.TextTransform.Processor.TemplateGenerator.SpecificHostType">
            <summary>
                If non-null, the template's Host property will be the full type of this host.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.Processor.TemplateGenerator.GetAdditionalDirectiveProcessors">
            <summary>
                Gets any additional directive processors to be included in the processing run.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.Processor.TemplatingEngine.GenerateCodeFromMembers(System.CodeDom.Compiler.CodeDomProvider,System.CodeDom.Compiler.CodeGeneratorOptions,System.IO.StringWriter,System.Collections.Generic.IEnumerable{System.CodeDom.CodeTypeMember})">
            <summary>
                An implementation of CodeDomProvider.GenerateCodeFromMember that works on Mono.
            </summary>
        </member>
        <member name="T:GameDevWare.TextTransform.TemplateSettings">
            <summary>
            T4 Template run settings.
            </summary>
        </member>
        <member name="T:GameDevWare.TextTransform.TemplateSettings.OutputTypes">
            <summary>
            Run mode. Determine result of transformation.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.OutputTypes.TextGenerator">
            <summary>
            Result is C# code of template which could output <see cref="F:GameDevWare.TextTransform.TemplateSettings.OutputTypes.Text"/> if ran.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.OutputTypes.Text">
            <summary>
            Result is generated code/markup.
            </summary>
        </member>
        <member name="T:GameDevWare.TextTransform.TemplateSettings.Triggers">
            <summary>
            Transformation triggers.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.Triggers.CodeCompilation">
            <summary>
            Each Unity's editor code compilation will trigger transformation.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.Triggers.AssetChanges">
            <summary>
            Each change in watched assets will trigger transformation.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.Trigger">
            <summary>
            Auto-transformation triggers.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.TriggerDelay">
            <summary>
            Delay to auto-transformation run after trigger event occurs.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.OutputType">
            <summary>
            Transformation result type. Generator or code/markup.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.OutputPath">
            <summary>
            Path to place transformation result.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TemplateSettings.WatchedAssets">
            <summary>
            Project relative paths to watched assets.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.CreateDefault(System.String)">
            <summary>
            Create default settings for template at <paramref name="templatePath"/>.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.Load(UnityEngine.Object)">
            <summary>
            Load settings for <paramref name="templateAsset"/>.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.Load(System.String)">
            <summary>
            Load settings for <paramref name="templatePath"/>.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.Save(System.String)">
            <summary>
            Save settings for <paramref name="templatePath"/>.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.ListTemplatesInProject">
            <summary>
            List all T4 templates in current project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.IsTemplateAsset(UnityEngine.Object)">
            <summary>
            Determines if asset is T4 template.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.TemplateSettings.IsTemplateAsset(System.String)">
            <summary>
            Determines if asset is T4 template.
            </summary>
        </member>
        <member name="T:GameDevWare.TextTransform.TransformationResult">
            <summary>
            Result of T4 template run.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TransformationResult.Success">
            <summary>
            Template transformation is successful.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TransformationResult.NoChanges">
            <summary>
            Template transformation is successful but output is same as existing.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TransformationResult.UnknownOutputType">
            <summary>
            Template transformation is failed due invalid settings.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TransformationResult.TemplateProcessingError">
            <summary>
            Template transformation is failed due error during transformation.
            </summary>
        </member>
        <member name="F:GameDevWare.TextTransform.TransformationResult.TemplateCompilationError">
            <summary>
            Template transformation is failed due error during template compilation.
            </summary>
        </member>
        <member name="T:GameDevWare.TextTransform.UnityTemplateGenerator">
            <summary>
            T4 Template based generator. Use <see cref="M:GameDevWare.TextTransform.UnityTemplateGenerator.RunForTemplate(System.String)"/> method to run transformation.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.UnityTemplateGenerator.#ctor">
            <summary>
            Create instance of <see cref="T:GameDevWare.TextTransform.UnityTemplateGenerator"/>.
            </summary>
        </member>
        <member name="M:GameDevWare.TextTransform.UnityTemplateGenerator.RunForTemplateWithDelay(System.String,System.TimeSpan)">
            <summary>
            Run T4 template transformation at <paramref name="templatePath"/> after <paramref name="delay"/>.
            </summary>
            <param name="templatePath">Path to T4 template.</param>
            <param name="delay">Defer value.</param>
        </member>
        <member name="M:GameDevWare.TextTransform.UnityTemplateGenerator.RunForTemplate(System.String)">
            <summary>
            Run T4 template transformation with at <paramref name="templatePath"/> with default settings.
            </summary>
            <param name="templatePath">Path to T4 template.</param>
            <returns>Result of transformation.</returns>
        </member>
        <member name="M:GameDevWare.TextTransform.UnityTemplateGenerator.RunForTemplate(System.String,System.String,GameDevWare.TextTransform.TemplateSettings,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Run T4 template transformation with at <paramref name="templatePath"/> with additional settings.
            </summary>
            <param name="templatePath">Path to T4 template.</param>
            <param name="outputPath">Output path. It will override <see cref="F:GameDevWare.TextTransform.TemplateSettings.OutputPath"/> from <paramref name="settings"/> parameter.</param>
            <param name="settings">Settings override for this run.</param>
            <param name="parameters">Additional template parameters. They could be retrieved with following code. <code>this.Host.ResolveParameterValue("-", "-", "someKey");</code>.</param>
            <param name="assemblyReferences">Additional assemblies to load during transformation. Could be assembly name or full path to assembly.</param>
            <param name="assemblyReferencesLookupPaths">Additional assembly lookup paths. Used during referenced assemblies resolution.</param>
            <param name="includeLookupPaths">Additional lookup path for &lt;#=include#&gt; directives.</param>
            <returns>Result of transformation.</returns>
        </member>
        <member name="T:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider">
            <summary>
            Provides access to instances of the .NET Compiler Platform C# code generator and code compiler.
            </summary>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider.#ctor(Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ICompilerSettings)">
            <summary>
            Creates an instance using the given ICompilerSettings
            </summary>
            <param name="compilerSettings"></param>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider.#ctor(Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions)">
            <summary>
            Creates an instance using the given IProviderOptions
            </summary>
            <param name="providerOptions"></param>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider.CreateCompiler">
            <summary>
            Gets an instance of the .NET Compiler Platform C# code compiler.
            </summary>
            <returns>An instance of the .NET Compiler Platform C# code compiler</returns>
        </member>
        <member name="T:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ICompilerSettings">
            <summary>
            Provides settings for the C# and VB CodeProviders
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ICompilerSettings.CompilerFullPath">
            <summary>
            The full path to csc.exe or vbc.exe
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ICompilerSettings.CompilerServerTimeToLive">
            <summary>
            TTL in seconds
            </summary>
        </member>
        <member name="T:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions">
            <summary>
            Provides settings for the C# and VB CodeProviders
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions.CompilerVersion">
            <summary>
            A string representing the in-box .Net Framework compiler version to be used.
            Not applicable to this Roslyn-based package which contains it's own compiler.
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions.WarnAsError">
            <summary>
            Returns true if the codedom provider has warnAsError set to true
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions.UseAspNetSettings">
            <summary>
            Returns true if the codedom provider is requesting to use similar default
            compiler options as ASP.Net does with in-box .Net Framework compilers.
            These options are programatically enforced on top of parameters passed
            in to the codedom provider.
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions.AllOptions">
            <summary>
            Returns the entire set of options - known or not - as configured in &lt;providerOptions&gt;
            </summary>
        </member>
        <member name="T:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions">
            <summary>
            A set of options for the C# and VB CodeProviders.
            </summary>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.#ctor">
            <summary>
            Create a default set of options for the C# and VB CodeProviders.
            </summary>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.#ctor(Microsoft.CodeDom.Providers.DotNetCompilerPlatform.IProviderOptions)">
            <summary>
            Create a set of options for the C# or VB CodeProviders using the specified inputs.
            </summary>
        </member>
        <member name="M:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.#ctor(System.String,System.Int32)">
            <summary>
            Create a set of options for the C# or VB CodeProviders using some specified inputs.
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.CompilerFullPath">
            <summary>
            The full path to csc.exe or vbc.exe
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.CompilerServerTimeToLive">
            <summary>
            TTL in seconds
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.CompilerVersion">
            <summary>
            Used by in-box framework code providers to determine which compat version of the compiler to use.
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.WarnAsError">
            <summary>
            Treat all warnings as errors. Will override defaults and command-line options given for a compiler.
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.UseAspNetSettings">
            <summary>
            Use the set of compiler options that was traditionally added programatically for ASP.Net.
            </summary>
        </member>
        <member name="P:Microsoft.CodeDom.Providers.DotNetCompilerPlatform.ProviderOptions.AllOptions">
            <summary>
            A collection of all &lt;providerOptions&gt; specified in config for the given CodeDomProvider.
            </summary>
        </member>
    </members>
</doc>
