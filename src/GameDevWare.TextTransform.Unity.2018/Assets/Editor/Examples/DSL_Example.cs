//------------------------------------------------------------------------------
// <auto-generated>
//	 This code was generated by a tool.
//	 Changes to this file may cause incorrect behavior and will be lost if
//	 the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// ReSharper disable All
using System;

namespace Assets.Editor.GameDevWare.TextTranform.Examples
{
	/// <summary>Game is started</summary>
	public sealed partial class GameStartedEvent : IEquatable<GameStartedEvent>
	{
		public DateTime Time { get; set; }

		public GameStartedEvent()
		{

		}
		public GameStartedEvent(DateTime time)
		{
			this.Time = time;
		}

		public override int GetHashCode()
		{
			return unchecked
			(
				(this.Time == default(DateTime) ? 0 : this.Time.GetHashCode()) 
			);
		}
		public override bool Equals(object value)
		{
			return this.Equals(value as GameStartedEvent);
		}
		public bool Equals(GameStartedEvent other)
		{
			if (other == null)
				return false;
			else if (ReferenceEquals(this, other))
				return true;

			return 
			(
				object.Equals(this.Time, other.Time)  
			);
		}

		public override string ToString()
		{
			return
			(
				"GameStartedEvent, " +
				"Time: " + this.Time 
			);
		}
	}

	/// <summary>Game is finished</summary>
	public sealed partial class GameFinishedEvent : IEquatable<GameFinishedEvent>
	{
		public DateTime Time { get; set; }
		public int Score { get; set; }

		public GameFinishedEvent()
		{

		}
		public GameFinishedEvent(DateTime time, int score)
		{
			this.Time = time;
			this.Score = score;
		}

		public override int GetHashCode()
		{
			return unchecked
			(
				(this.Time == default(DateTime) ? 0 : this.Time.GetHashCode()) +
				(this.Score == default(int) ? 0 : this.Score.GetHashCode()) 
			);
		}
		public override bool Equals(object value)
		{
			return this.Equals(value as GameFinishedEvent);
		}
		public bool Equals(GameFinishedEvent other)
		{
			if (other == null)
				return false;
			else if (ReferenceEquals(this, other))
				return true;

			return 
			(
				object.Equals(this.Time, other.Time)  &&
				object.Equals(this.Score, other.Score)  
			);
		}

		public override string ToString()
		{
			return
			(
				"GameFinishedEvent, " +
				"Time: " + this.Time + ", " + 
				"Score: " + this.Score 
			);
		}
	}

}

